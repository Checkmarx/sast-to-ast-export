// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/checkmarxDev/ast-sast-export/internal/database/store (interfaces: CxComponentConfigurationStore)

// Package mock_store is a generated GoMock package.
package mock_store

import (
	reflect "reflect"

	database "github.com/checkmarxDev/ast-sast-export/internal/database"
	gomock "github.com/golang/mock/gomock"
)

// MockCxComponentConfigurationStore is a mock of CxComponentConfigurationStore interface.
type MockCxComponentConfigurationStore struct {
	ctrl     *gomock.Controller
	recorder *MockCxComponentConfigurationStoreMockRecorder
}

// MockCxComponentConfigurationStoreMockRecorder is the mock recorder for MockCxComponentConfigurationStore.
type MockCxComponentConfigurationStoreMockRecorder struct {
	mock *MockCxComponentConfigurationStore
}

// NewMockCxComponentConfigurationStore creates a new mock instance.
func NewMockCxComponentConfigurationStore(ctrl *gomock.Controller) *MockCxComponentConfigurationStore {
	mock := &MockCxComponentConfigurationStore{ctrl: ctrl}
	mock.recorder = &MockCxComponentConfigurationStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCxComponentConfigurationStore) EXPECT() *MockCxComponentConfigurationStoreMockRecorder {
	return m.recorder
}

// GetByKey mocks base method.
func (m *MockCxComponentConfigurationStore) GetByKey(arg0 string) (*database.ComponentConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByKey", arg0)
	ret0, _ := ret[0].(*database.ComponentConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByKey indicates an expected call of GetByKey.
func (mr *MockCxComponentConfigurationStoreMockRecorder) GetByKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByKey", reflect.TypeOf((*MockCxComponentConfigurationStore)(nil).GetByKey), arg0)
}
