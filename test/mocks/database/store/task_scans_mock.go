// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/checkmarxDev/ast-sast-export/internal/database/store (interfaces: TaskScansStore)

// Package mock_store is a generated GoMock package.
package mock_store

import (
	reflect "reflect"

	database "github.com/checkmarxDev/ast-sast-export/internal/database"
	gomock "github.com/golang/mock/gomock"
)

// MockTaskScansStore is a mock of TaskScansStore interface.
type MockTaskScansStore struct {
	ctrl     *gomock.Controller
	recorder *MockTaskScansStoreMockRecorder
}

// MockTaskScansStoreMockRecorder is the mock recorder for MockTaskScansStore.
type MockTaskScansStoreMockRecorder struct {
	mock *MockTaskScansStore
}

// NewMockTaskScansStore creates a new mock instance.
func NewMockTaskScansStore(ctrl *gomock.Controller) *MockTaskScansStore {
	mock := &MockTaskScansStore{ctrl: ctrl}
	mock.recorder = &MockTaskScansStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskScansStore) EXPECT() *MockTaskScansStoreMockRecorder {
	return m.recorder
}

// GetByID mocks base method.
func (m *MockTaskScansStore) GetByID(arg0 string) (*database.TaskScan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].(*database.TaskScan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockTaskScansStoreMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockTaskScansStore)(nil).GetByID), arg0)
}
