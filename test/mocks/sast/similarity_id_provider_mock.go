// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/checkmarxDev/ast-sast-export/internal/sast (interfaces: SimilarityIDProvider)

// Package mock_sast is a generated GoMock package.
package mock_sast

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSimilarityIDProvider is a mock of SimilarityIDProvider interface.
type MockSimilarityIDProvider struct {
	ctrl     *gomock.Controller
	recorder *MockSimilarityIDProviderMockRecorder
}

// MockSimilarityIDProviderMockRecorder is the mock recorder for MockSimilarityIDProvider.
type MockSimilarityIDProviderMockRecorder struct {
	mock *MockSimilarityIDProvider
}

// NewMockSimilarityIDProvider creates a new mock instance.
func NewMockSimilarityIDProvider(ctrl *gomock.Controller) *MockSimilarityIDProvider {
	mock := &MockSimilarityIDProvider{ctrl: ctrl}
	mock.recorder = &MockSimilarityIDProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSimilarityIDProvider) EXPECT() *MockSimilarityIDProviderMockRecorder {
	return m.recorder
}

// Calculate mocks base method.
func (m *MockSimilarityIDProvider) Calculate(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Calculate", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Calculate indicates an expected call of Calculate.
func (mr *MockSimilarityIDProviderMockRecorder) Calculate(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Calculate", reflect.TypeOf((*MockSimilarityIDProvider)(nil).Calculate), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
}
