// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/checkmarxDev/ast-sast-export/internal/sast/report (interfaces: SourceProvider)

// Package mock_report is a generated GoMock package.
package mock_report

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSourceProvider is a mock of SourceProvider interface.
type MockSourceProvider struct {
	ctrl     *gomock.Controller
	recorder *MockSourceProviderMockRecorder
}

// MockSourceProviderMockRecorder is the mock recorder for MockSourceProvider.
type MockSourceProviderMockRecorder struct {
	mock *MockSourceProvider
}

// NewMockSourceProvider creates a new mock instance.
func NewMockSourceProvider(ctrl *gomock.Controller) *MockSourceProvider {
	mock := &MockSourceProvider{ctrl: ctrl}
	mock.recorder = &MockSourceProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSourceProvider) EXPECT() *MockSourceProviderMockRecorder {
	return m.recorder
}

// GetBasePath mocks base method.
func (m *MockSourceProvider) GetBasePath(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBasePath", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBasePath indicates an expected call of GetBasePath.
func (mr *MockSourceProviderMockRecorder) GetBasePath(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBasePath", reflect.TypeOf((*MockSourceProvider)(nil).GetBasePath), arg0)
}
