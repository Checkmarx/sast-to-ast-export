// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/checkmarxDev/ast-sast-export/internal/integration/similarity (interfaces: IDProvider)
//
// Generated by this command:
//
//	mockgen -package mock_integration_similarity -destination test/mocks/integration/similarity/provider_mock.go github.com/checkmarxDev/ast-sast-export/internal/integration/similarity IDProvider
//

// Package mock_integration_similarity is a generated GoMock package.
package mock_integration_similarity

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIDProvider is a mock of IDProvider interface.
type MockIDProvider struct {
	ctrl     *gomock.Controller
	recorder *MockIDProviderMockRecorder
}

// MockIDProviderMockRecorder is the mock recorder for MockIDProvider.
type MockIDProviderMockRecorder struct {
	mock *MockIDProvider
}

// NewMockIDProvider creates a new mock instance.
func NewMockIDProvider(ctrl *gomock.Controller) *MockIDProvider {
	mock := &MockIDProvider{ctrl: ctrl}
	mock.recorder = &MockIDProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDProvider) EXPECT() *MockIDProviderMockRecorder {
	return m.recorder
}

// Calculate mocks base method.
func (m *MockIDProvider) Calculate(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10 string, arg11 int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Calculate", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Calculate indicates an expected call of Calculate.
func (mr *MockIDProviderMockRecorder) Calculate(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Calculate", reflect.TypeOf((*MockIDProvider)(nil).Calculate), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)
}
