// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/checkmarxDev/ast-sast-export/internal/app/interfaces (interfaces: ASTQueryIDRepo)

// Package mock_app_ast_query_id is a generated GoMock package.
package mock_app_ast_query_id

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockASTQueryIDRepo is a mock of ASTQueryIDRepo interface.
type MockASTQueryIDRepo struct {
	ctrl     *gomock.Controller
	recorder *MockASTQueryIDRepoMockRecorder
}

// MockASTQueryIDRepoMockRecorder is the mock recorder for MockASTQueryIDRepo.
type MockASTQueryIDRepoMockRecorder struct {
	mock *MockASTQueryIDRepo
}

// NewMockASTQueryIDRepo creates a new mock instance.
func NewMockASTQueryIDRepo(ctrl *gomock.Controller) *MockASTQueryIDRepo {
	mock := &MockASTQueryIDRepo{ctrl: ctrl}
	mock.recorder = &MockASTQueryIDRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockASTQueryIDRepo) EXPECT() *MockASTQueryIDRepoMockRecorder {
	return m.recorder
}

// GetQueryID mocks base method.
func (m *MockASTQueryIDRepo) GetQueryID(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetQueryID", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetQueryID indicates an expected call of GetQueryID.
func (mr *MockASTQueryIDRepoMockRecorder) GetQueryID(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetQueryID", reflect.TypeOf((*MockASTQueryIDRepo)(nil).GetQueryID), arg0, arg1, arg2)
}
