// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/checkmarxDev/ast-sast-export/internal/app/interfaces (interfaces: ASTQueryProvider)
//
// Generated by this command:
//
//	mockgen -package mock_interfaces -destination test/mocks/app/ast_query/mock_provider.go github.com/checkmarxDev/ast-sast-export/internal/app/interfaces ASTQueryProvider
//

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	reflect "reflect"

	soap "github.com/checkmarxDev/ast-sast-export/internal/integration/soap"
	gomock "go.uber.org/mock/gomock"
)

// MockASTQueryProvider is a mock of ASTQueryProvider interface.
type MockASTQueryProvider struct {
	ctrl     *gomock.Controller
	recorder *MockASTQueryProviderMockRecorder
}

// MockASTQueryProviderMockRecorder is the mock recorder for MockASTQueryProvider.
type MockASTQueryProviderMockRecorder struct {
	mock *MockASTQueryProvider
}

// NewMockASTQueryProvider creates a new mock instance.
func NewMockASTQueryProvider(ctrl *gomock.Controller) *MockASTQueryProvider {
	mock := &MockASTQueryProvider{ctrl: ctrl}
	mock.recorder = &MockASTQueryProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockASTQueryProvider) EXPECT() *MockASTQueryProviderMockRecorder {
	return m.recorder
}

// GetCustomQueriesList mocks base method.
func (m *MockASTQueryProvider) GetCustomQueriesList() (*soap.GetQueryCollectionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomQueriesList")
	ret0, _ := ret[0].(*soap.GetQueryCollectionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomQueriesList indicates an expected call of GetCustomQueriesList.
func (mr *MockASTQueryProviderMockRecorder) GetCustomQueriesList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomQueriesList", reflect.TypeOf((*MockASTQueryProvider)(nil).GetCustomQueriesList))
}

// GetCustomStatesList mocks base method.
func (m *MockASTQueryProvider) GetCustomStatesList() (*soap.GetResultStateListResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomStatesList")
	ret0, _ := ret[0].(*soap.GetResultStateListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomStatesList indicates an expected call of GetCustomStatesList.
func (mr *MockASTQueryProviderMockRecorder) GetCustomStatesList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomStatesList", reflect.TypeOf((*MockASTQueryProvider)(nil).GetCustomStatesList))
}

// GetQueryID mocks base method.
func (m *MockASTQueryProvider) GetQueryID(arg0, arg1, arg2, arg3 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetQueryID", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetQueryID indicates an expected call of GetQueryID.
func (mr *MockASTQueryProviderMockRecorder) GetQueryID(arg0, arg1, arg2, arg3 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetQueryID", reflect.TypeOf((*MockASTQueryProvider)(nil).GetQueryID), arg0, arg1, arg2, arg3)
}

// GetRawCustomStatesList mocks base method.
func (m *MockASTQueryProvider) GetRawCustomStatesList() (*soap.GetResultStateListResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRawCustomStatesList")
	ret0, _ := ret[0].(*soap.GetResultStateListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRawCustomStatesList indicates an expected call of GetRawCustomStatesList.
func (mr *MockASTQueryProviderMockRecorder) GetRawCustomStatesList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRawCustomStatesList", reflect.TypeOf((*MockASTQueryProvider)(nil).GetRawCustomStatesList))
}

// GetStateMapping mocks base method.
func (m *MockASTQueryProvider) GetStateMapping() (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStateMapping")
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStateMapping indicates an expected call of GetStateMapping.
func (mr *MockASTQueryProviderMockRecorder) GetStateMapping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStateMapping", reflect.TypeOf((*MockASTQueryProvider)(nil).GetStateMapping))
}
