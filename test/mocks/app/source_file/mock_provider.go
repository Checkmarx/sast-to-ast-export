// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/checkmarxDev/ast-sast-export/internal/app/interfaces (interfaces: SourceFileRepo)
//
// Generated by this command:
//
//	mockgen -package mock_app_source_file -destination test/mocks/app/source_file/mock_provider.go github.com/checkmarxDev/ast-sast-export/internal/app/interfaces SourceFileRepo
//

// Package mock_app_source_file is a generated GoMock package.
package mock_app_source_file

import (
	reflect "reflect"

	interfaces "github.com/checkmarxDev/ast-sast-export/internal/app/interfaces"
	gomock "go.uber.org/mock/gomock"
)

// MockSourceFileRepo is a mock of SourceFileRepo interface.
type MockSourceFileRepo struct {
	ctrl     *gomock.Controller
	recorder *MockSourceFileRepoMockRecorder
}

// MockSourceFileRepoMockRecorder is the mock recorder for MockSourceFileRepo.
type MockSourceFileRepoMockRecorder struct {
	mock *MockSourceFileRepo
}

// NewMockSourceFileRepo creates a new mock instance.
func NewMockSourceFileRepo(ctrl *gomock.Controller) *MockSourceFileRepo {
	mock := &MockSourceFileRepo{ctrl: ctrl}
	mock.recorder = &MockSourceFileRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSourceFileRepo) EXPECT() *MockSourceFileRepoMockRecorder {
	return m.recorder
}

// DownloadSourceFiles mocks base method.
func (m *MockSourceFileRepo) DownloadSourceFiles(arg0 string, arg1 []interfaces.SourceFile) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadSourceFiles", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DownloadSourceFiles indicates an expected call of DownloadSourceFiles.
func (mr *MockSourceFileRepoMockRecorder) DownloadSourceFiles(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadSourceFiles", reflect.TypeOf((*MockSourceFileRepo)(nil).DownloadSourceFiles), arg0, arg1)
}
