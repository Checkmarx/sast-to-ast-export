// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/checkmarxDev/ast-sast-export/internal/app/interfaces (interfaces: QueriesRepo)
//
// Generated by this command:
//
//	mockgen -package mock_interfaces_queries -destination test/mocks/app/queries/mock_provider.go github.com/checkmarxDev/ast-sast-export/internal/app/interfaces QueriesRepo
//

// Package mock_interfaces_queries is a generated GoMock package.
package mock_interfaces_queries

import (
	reflect "reflect"

	soap "github.com/checkmarxDev/ast-sast-export/internal/integration/soap"
	gomock "go.uber.org/mock/gomock"
)

// MockQueriesRepo is a mock of QueriesRepo interface.
type MockQueriesRepo struct {
	ctrl     *gomock.Controller
	recorder *MockQueriesRepoMockRecorder
}

// MockQueriesRepoMockRecorder is the mock recorder for MockQueriesRepo.
type MockQueriesRepoMockRecorder struct {
	mock *MockQueriesRepo
}

// NewMockQueriesRepo creates a new mock instance.
func NewMockQueriesRepo(ctrl *gomock.Controller) *MockQueriesRepo {
	mock := &MockQueriesRepo{ctrl: ctrl}
	mock.recorder = &MockQueriesRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQueriesRepo) EXPECT() *MockQueriesRepoMockRecorder {
	return m.recorder
}

// GetQueriesList mocks base method.
func (m *MockQueriesRepo) GetQueriesList() (*soap.GetQueryCollectionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetQueriesList")
	ret0, _ := ret[0].(*soap.GetQueryCollectionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetQueriesList indicates an expected call of GetQueriesList.
func (mr *MockQueriesRepoMockRecorder) GetQueriesList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetQueriesList", reflect.TypeOf((*MockQueriesRepo)(nil).GetQueriesList))
}
